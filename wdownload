[ -n $UDIR ] && UDIR=`pwd`
[ -n WPATH ] && WPATH=$UDIR

#echo "----DOWN UDIR=$UDIR"
#echo "----DOWN WPATH=$WPATH"

WDIR=.w

mkdir -p $WDIR/Cache $WDIR/Session

# --- sets COLS

[ "$1" == "-d" ] && DOWNLOAD=DOWNLOAD && shift

GO=$1
ROWS=${2:-}
COLS=${3:-}

SAFE=`$WPATH/wquote "$GO"`
CFILE=$WDIR/Cache/$SAFE

# --- DOWNLOAD forces a new download

[ $DOWNLOAD ] && rm -f $CFILE.ANSI $CFILE.TMP

# --- Log it (if -d)
# (logging it adds to history so we can browse it!)

[ $DOWNLOAD ] && ( \
  echo "`date --iso=s` #=W $GO $CFILE.ANSI" \
    | tee -a .wlog \
    | tee -a $CFILE.WLOG \
    >> .whistory )

# --- local file (always copy)

[ -f $GO ] && cp $GO $CFILE.DOWN && ( rm -f $CFILE.ANSI ; touch $CFILE.TMP )

# --- Do we already have it?
# (detect change of screen width?)

#[ -f $CFILE.DOWN && ! $DOWNLOAD ] \
#  && $WPATH/wmessage "./wdownload already have $O" $ROWS $COLS \
#  && exit 0

# --- log
echo "`date --iso=s` #=DOWN $GO $CFILE.ANSI" \
  | tee -a .wlog \
  >> $CFILE.WLOG

# --- WGET
# Exit:
#   1   Generic error code.
#   2   Parse error (options).
#   3   File I/O error.
#   4   Network failure.
#   5   SSL verification failure.
#   6   Username/password auth fail.
#   7   Protocol errors.
#   8   Server gave error.

# TODO: always update?

# --- download if not local file
if [[ ! -f "$CFILE.DOWN" ]]; then
   # - display spinning globe!
   $WPATH/spin.x & foo_pid=$!

   $WPATH/wmessage "./wdownload $GO" $ROWS $COLS

   # save original URL
   echo "$GO" > $CFILE.URL

   # - download
   # (.TMP indicates download started)

  (wget -O $CFILE.TMP "$GO" || echo 0 ) 2>&1 | grep ERROR > $CFILE.ERR \
    && (err=$? ; echo "WGET.ERROR $?" >> $CFILE.ERR ; exit $err) \
   && rm $CFILE.TMP || rm $CFILE.ERR

   # - kill the globe
   ( kill $foo_pid && wait $foo_pid ) 2>/dev/null 1>&2

   # -- we have .ERR if fail or .TMP if ok!

   [ -f $CFILE.ERR ] && $WPATH/werror "./wdownload error: $err $GO" $ROWS $COLS && exit 

#  ; rm $CFILE.TMP ; ( ( kill $foo_pid >/dev/null && wait $foo_pid ) 2>/dev/null 1>&2 ) ; echo "$err" >.wnetdown ; exit $err) || exit $?

   rm -f .wnetdown

   $WPATH/wmessage "./wdownload done: $GO" $ROWS $COLS

   # - cat so get correct date on file
   # (wget gives file as of HEAD date!)
   cat $CFILE.TMP > $CFILE.DOWN
fi

# TODO: handle render errors? 
# (maybe add error message in file?)

$WPATH/w.x $CFILE.DOWN $GO $COLS > $CFILE.ANSI

# generate links list
$WPATH/wlinks $CFILE.ANSI > $CFILE.LINKS

rm -f $CFILE.TMP

# - Signal app that requested
# TODO: 
# kill:
# - https://en.m.wikipedia.org/wiki/Signal_(IPC)#Handling_signals
# - https://en.m.wikipedia.org/wiki/C_signal_handling
#  0   SIGNULL
#  -1  SIGHUP
#  -2  SIGINT
#  -5  SIGPOLL
#  -16 SIGUSR1
#  -17 SIGUSR2
#  -20 SIGCHLD
#  -23 SIGIO
#  -28 SIGWINCH
#  -38 SIGDCE
